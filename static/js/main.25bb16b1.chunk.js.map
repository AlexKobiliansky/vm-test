{"version":3,"sources":["components/Loader/Loader.jsx","components/Table/Table.jsx","components/DetailRow/DetailRow.jsx","components/ModeSelector/ModeSelector.jsx","components/SearchLabel/SearchLabel.jsx","App.js","index.js"],"names":["Loader","className","Table","data","onSort","sortOrder","sortField","onRowSelect","selectedRow","onClick","map","item","id","phone","firstName","lastName","email","DetailRow","description","address","streetAddress","city","state","zip","ModeSelector","onSelectMode","process","SearchLabel","onSearch","useState","value","setValue","type","onChange","e","target","spliceArray","arr","size","arrClone","res","length","push","splice","App","isModeSelected","setIsModeSelected","isLoading","setIsloading","setData","displayData","setDisplayData","filteredData","setFilteredData","setSortOrder","setSortField","setSelectedRow","currentPage","setCurrentPage","searchLine","setSearchLine","useEffect","filter","toLowerCase","includes","handleSelectMode","url","a","fetch","response","json","string","param","cloneData","sortOn","orderedData","sort","b","row","previousLabel","nextLabel","breakLabel","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","breakClassName","previousLinkClassName","nextLinkClassName","breakLinkClassName","forcePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25bb16b1.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css';\n\nconst Loader = () => {\n  return (\n    <div className='sk-circle-bounce'>\n      <div className=\"sk-child sk-circle-1\" />\n      <div className=\"sk-child sk-circle-2\" />\n      <div className=\"sk-child sk-circle-3\" />\n      <div className=\"sk-child sk-circle-4\" />\n      <div className=\"sk-child sk-circle-5\" />\n      <div className=\"sk-child sk-circle-6\" />\n      <div className=\"sk-child sk-circle-7\" />\n      <div className=\"sk-child sk-circle-8\" />\n      <div className=\"sk-child sk-circle-9\" />\n      <div className=\"sk-child sk-circle-10\" />\n      <div className=\"sk-child sk-circle-11\" />\n      <div className=\"sk-child sk-circle-12\" />\n    </div>\n  );\n};\n\nexport default Loader;","import React from 'react';\nimport './Table.css';\n\nconst Table = ({data, onSort, sortOrder, sortField, onRowSelect, selectedRow}) => {\n  return (\n    <table className=\"table vm-table\">\n      <thead>\n      <tr>\n        <th\n          onClick={() => onSort('id')}\n          className={`${sortField === 'id' ? 'sorting' : ''} ${sortOrder}`}\n        >\n          ID\n        </th>\n        <th\n          onClick={() => onSort('firstName')}\n          className={`${sortField === 'firstName' ? 'sorting' : ''} ${sortOrder}`}\n        >\n          First Name\n        </th>\n        <th\n          onClick={() => onSort('lastName')}\n          className={`${sortField === 'lastName' ? 'sorting' : ''} ${sortOrder}`}\n        >\n          Last Name\n        </th>\n        <th\n          onClick={() => onSort('email')}\n          className={`${sortField === 'email' ? 'sorting' : ''} ${sortOrder}`}\n        >\n          Email\n        </th>\n        <th\n          onClick={() => onSort('phone')}\n          className={`${sortField === 'phone' ? 'sorting' : ''} ${sortOrder}`}\n        >\n          Phone\n        </th>\n      </tr>\n      </thead>\n\n      <tbody>\n      {data?.map(item => (\n        <tr\n          key={`${item.id}-${item.phone}`}\n          onClick={() => onRowSelect(item)}\n          className={`${(item?.id + item?.phone) === (selectedRow?.id + selectedRow?.phone) ? 'selected' : ''}`}\n        >\n          <td>{item.id}</td>\n          <td>{item.firstName}</td>\n          <td>{item.lastName}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;","import React from 'react';\nimport './DetailRow.css'\n\nconst DetailRow = ({item}) => {\n  return (\n    <div className=\"detail-row\">\n      <p>Выбран пользователь <b>{item.firstName} {item.lastName}</b></p>\n        Описание:\n        <div className='description'>{item.description}</div>\n      <p>Адрес проживания: <b>{item?.address?.streetAddress}</b></p>\n      <p>Город: <b>{item?.address?.city}</b></p>\n      <p>Провинция/штат: <b>{item?.address?.state}</b></p>\n      <p>Индекс: <b>{item?.address?.zip}</b></p>\n    </div>\n  );\n};\n\nexport default DetailRow;","import React from 'react';\nimport './ModeSelector.css';\n\nconst ModeSelector = ({onSelectMode}) => {\n  return (\n    <div className='mode-selector'>\n      <button onClick={() => onSelectMode(process.env.REACT_APP_SMALL_SIZE_DATA_URL)} className=\"btn btn-info\">Подгрузить малый объем</button>\n      <button onClick={() => onSelectMode(process.env.REACT_APP_LARGE_SIZE_DATA_URL)} className=\"btn btn-danger\">Подгрузить большой объем</button>\n    </div>\n  );\n};\n\nexport default ModeSelector;","import React, {useState} from 'react';\n\nconst SearchLabel = ({onSearch}) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n\n  return (\n    <div className={'input-group mb-3 mt-3'}>\n      <div className={'input-group-prepend'}>\n        <button\n          className={'btn btn-outline-secondary'}\n          onClick={() => onSearch(value)}\n        >Поиск</button>\n      </div>\n      <input\n        type=\"text\"\n        className={'form-control'}\n        value={value}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchLabel;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport {useEffect, useState} from 'react';\nimport Loader from './components/Loader/Loader';\nimport Table from './components/Table/Table';\nimport DetailRow from './components/DetailRow/DetailRow';\nimport ModeSelector from './components/ModeSelector/ModeSelector';\nimport ReactPaginate from 'react-paginate';\nimport SearchLabel from './components/SearchLabel/SearchLabel';\n\nconst spliceArray = (arr, size) => {\n  let arrClone = [...arr];\n  let res = [];\n\n  while (arrClone.length > 0) {\n    res.push(arrClone.splice(0, size))\n  }\n\n  return res;\n}\n\nfunction App() {\n  const [isModeSelected, setIsModeSelected] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const [data, setData] = useState(false);\n  const [displayData, setDisplayData] = useState(null);\n  const [filteredData, setFilteredData] = useState(data);\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortField, setSortField] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchLine, setSearchLine] = useState('');\n\n  const pageSize = 50;\n\n  const getFilteredData = () => {\n    if (!searchLine) return data;\n\n    return data.filter(item => (\n      item.firstName.toLowerCase().includes(searchLine.toLowerCase()) ||\n      item.lastName.toLowerCase().includes(searchLine.toLowerCase()) ||\n      item.email.toLowerCase().includes(searchLine.toLowerCase())\n    ));\n  }\n\n  useEffect(() => {\n    if (data) {\n      const filteredData = getFilteredData();\n      setDisplayData(spliceArray(filteredData, pageSize)[currentPage]);\n      setFilteredData(filteredData)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, data, searchLine]);\n\n  const handleSort = param => {\n    const cloneData = [...data];\n    const sortOn = sortOrder === 'asc' ? 'desc' : 'asc';\n\n    const orderedData = cloneData.sort((a ,b) => {\n      if (sortOrder === 'asc') {\n        return a[param] < b[param] ? 1 : -1\n      } else {\n        return a[param] > b[param] ? 1 : -1\n      }\n    });\n\n    setData(orderedData);\n    setSortOrder(sortOn);\n    setSortField(param);\n  }\n\n  const handleSearch = string => {\n    setCurrentPage(0);\n    setSearchLine(string);\n  }\n\n  const handleSelectRow = (row) => {\n    setSelectedRow(row);\n  }\n\n  const handleSelectMode = async (url) => {\n    setIsModeSelected(true);\n    setIsloading(true);\n    const response = await fetch(url);\n    const data = await response.json();\n    setData(data);\n    setIsloading(false);\n    spliceArray(data, pageSize);\n  }\n\n  const handleChangePage = ({selected}) => {\n    setCurrentPage(selected)\n  }\n\n  if (!isModeSelected) {\n    return (\n      <div className=\"container\">\n        <ModeSelector onSelectMode={handleSelectMode}/>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      {\n        isLoading\n          ? <Loader/>\n          : <>\n            <SearchLabel onSearch={handleSearch}/>\n            <Table\n              data={displayData}\n              onSort={handleSort}\n              sortOrder={sortOrder}\n              sortField={sortField}\n              onRowSelect={handleSelectRow}\n              selectedRow={selectedRow}\n            />\n          </>\n      }\n\n      {\n        (data?.length > pageSize) && <ReactPaginate\n        previousLabel={'<<'}\n        nextLabel={'>>'}\n        breakLabel={'...'}\n        pageCount={Math.ceil(filteredData?.length/pageSize)}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={handleChangePage}\n        containerClassName={'pagination'}\n        activeClassName={'active'}\n        pageClassName={'page-item'}\n        pageLinkClassName={'page-link'}\n        previousClassName={'page-item'}\n        nextClassName={'page-item'}\n        breakClassName={'page-item'}\n        previousLinkClassName={'page-link'}\n        nextLinkClassName={'page-link'}\n        breakLinkClassName={'page-link'}\n        forcePage={currentPage}\n      />\n      }\n\n      {selectedRow && <DetailRow item={selectedRow}/>}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}